// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fix_it_tracker_back_end.Model;

namespace fix_it_tracker_back_end.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200206041450_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("fix_it_tracker_back_end.Model.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.Fault", b =>
                {
                    b.Property<int>("FaultID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("FaultID");

                    b.ToTable("Faults");
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ItemID");

                    b.HasIndex("ItemTypeID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.ItemType", b =>
                {
                    b.Property<int>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ItemTypeID");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.Repair", b =>
                {
                    b.Property<int>("RepairID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.HasKey("RepairID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Repairs");
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.RepairItem", b =>
                {
                    b.Property<int>("RepairItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourierTrackingID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DateRepaired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateShipped")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("RepairID")
                        .HasColumnType("int");

                    b.HasKey("RepairItemID");

                    b.HasIndex("ItemID");

                    b.HasIndex("RepairID");

                    b.ToTable("RepairItems");
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.RepairItemFault", b =>
                {
                    b.Property<int>("RepairItemID")
                        .HasColumnType("int");

                    b.Property<int>("FaultID")
                        .HasColumnType("int");

                    b.HasKey("RepairItemID", "FaultID");

                    b.HasIndex("FaultID");

                    b.ToTable("RepairItemFaults");
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.RepairItemResolution", b =>
                {
                    b.Property<int>("RepairItemID")
                        .HasColumnType("int");

                    b.Property<int>("ResolutionID")
                        .HasColumnType("int");

                    b.HasKey("RepairItemID", "ResolutionID");

                    b.HasIndex("ResolutionID");

                    b.ToTable("RepairItemResolutions");
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.Resolution", b =>
                {
                    b.Property<int>("ResolutionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ResolutionID");

                    b.ToTable("Resolutions");
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.Item", b =>
                {
                    b.HasOne("fix_it_tracker_back_end.Model.ItemType", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.Repair", b =>
                {
                    b.HasOne("fix_it_tracker_back_end.Model.Customer", "Customer")
                        .WithMany("Repairs")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.RepairItem", b =>
                {
                    b.HasOne("fix_it_tracker_back_end.Model.Item", "Item")
                        .WithMany("RepairItems")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fix_it_tracker_back_end.Model.Repair", "Repair")
                        .WithMany("RepairItems")
                        .HasForeignKey("RepairID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.RepairItemFault", b =>
                {
                    b.HasOne("fix_it_tracker_back_end.Model.Fault", "Fault")
                        .WithMany()
                        .HasForeignKey("FaultID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fix_it_tracker_back_end.Model.RepairItem", "RepairItem")
                        .WithMany("RepairItemFaults")
                        .HasForeignKey("RepairItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("fix_it_tracker_back_end.Model.RepairItemResolution", b =>
                {
                    b.HasOne("fix_it_tracker_back_end.Model.RepairItem", "RepairItem")
                        .WithMany("RepairItemResolutions")
                        .HasForeignKey("RepairItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fix_it_tracker_back_end.Model.Resolution", "Resolution")
                        .WithMany()
                        .HasForeignKey("ResolutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
